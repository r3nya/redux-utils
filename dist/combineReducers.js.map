{"version":3,"sources":["combineReducers.js"],"names":[],"mappings":";;;;;;qBAAc,SAAS;;;;yBACD,WAAW;;;;+BACL,mBAAmB;;;;8BACpB,kBAAkB;;;;qBAC/B,OAAO;;;;2BACG,eAAe;;;;2BACf,eAAe;;;;AAEvC,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAI,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,aAAa,EAAK;AAC7D,MAAI,CAAC,uBAAU,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AAC1C,UAAM,IAAI,KAAK,qDAAqD,CAAA;GACrE;AACD,qBAAE,OAAO,CAAC,WAAW,EAAE,UAAC,KAAK,EAAE,UAAU,EAAK;AAC5C,QAAI,yBAAY,KAAK,CAAC,EAAE;AACtB,UAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACtB,qBAAa,CAAC,eAAe,GAAG,IAAI,CAAA;AACpC,YAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC,CAAA;AAC/D,YAAI,CAAC,uBAAU,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AAC1C,gBAAM,IAAI,KAAK,8DAA4D,UAAU,kBAAa,MAAM,CAAC,IAAI,oCAA+B,OAAO,MAAM,QAAK,CAAA;SAC/J;AACD,cAAM,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAA;OACxC;KACF,MAAM,IAAI,yBAAY,KAAK,CAAC,EAAE;AAC7B,YAAM,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,uBAAU,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC,CAAA;KACnH;GACF,CAAC,CAAA;AACF,SAAO,MAAM,CAAA;CACd,CAAA;;qBAEc,UAAC,OAAO,EAAK;AAC1B,+BAAgB,OAAO,CAAC,CAAA;AACxB,SAAO,UAAC,KAAK,EAAE,MAAM,EAAK;AACxB,QAAI,CAAC,MAAM,EAAE;AACX,YAAM,IAAI,KAAK,6CAA6C,CAAA;KAC7D;AACD,QAAI,MAAM,CAAC,IAAI,IAAI,mBAAE,GAAG,CAAC,mBAAE,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AACvD,aAAO,CAAC,IAAI,+BAA6B,MAAM,CAAC,IAAI,oIAAiI,CAAA;AACrL,aAAO,KAAK,CAAA;KACb;AACD,gCAAe,MAAM,CAAC,CAAA;AACtB,QAAI,aAAa,GAAG;AAClB,qBAAe,EAAE,KAAK;KACvB,CAAA;AACD,QAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,CAAC,CAAA;AAC9D,QAAI,CAAC,aAAa,CAAC,eAAe,IAAI,MAAM,CAAC,IAAI,gBAAgB,EAAE;AACjE,aAAO,CAAC,IAAI,wBAAsB,MAAM,CAAC,IAAI,SAAM,MAAM,CAAC,CAAA;KAC3D;AACD,WAAO,QAAQ,CAAA;GAChB,CAAA;CACF","file":"combineReducers.js","sourcesContent":["import _ from './utils'\nimport Immutable from 'immutable'\nimport validateReducer from './validateReducer'\nimport validateAction from './validateAction'\nimport R from 'ramda'\nimport isActionMap from './isActionMap'\nimport isDomainMap from './isDomainMap'\n\nlet iterator = (domain, action, reducersObj, actionTracker) => {\n  if (!Immutable.Iterable.isIterable(domain)) {\n    throw new Error(`Domain must be an instance of Immutable.Iterable.`)\n  }\n  _.forEach(reducersObj, (value, domainName) => {\n    if (isActionMap(value)) {\n      if (value[action.name]) {\n        actionTracker.isActionHandled = true\n        let result = value[action.name](domain.get(domainName), action)\n        if (!Immutable.Iterable.isIterable(result)) {\n          throw new Error(`Reducer must return an instance of Immutable.Iterable. \"${domainName}\" domain \"${action.name}\" action handler result is \"${typeof result}\".`)\n        }\n        domain = domain.set(domainName, result)\n      }\n    } else if (isDomainMap(value)) {\n      domain = domain.set(domainName, iterator(domain.get(domainName) || Immutable.Map(), action, value, actionTracker))\n    }\n  })\n  return domain\n}\n\nexport default (reducer) => {\n  validateReducer(reducer)\n  return (state, action) => {\n    if (!action) {\n      throw new Error(`Action parameter value must be an object.`)\n    }\n    if (action.type && R.not(R.contains('@@', action.type))) {\n      console.info(`Ignoring private action \"${action.type}\". redux-immutable does not support state inflation. Refer to https://github.com/gajus/canonical-reducer-composition/issues/1.`)\n      return state\n    }\n    validateAction(action)\n    let actionTracker = {\n      isActionHandled: false\n    }\n    let newState = iterator(state, action, reducer, actionTracker)\n    if (!actionTracker.isActionHandled && action.name !== `CONSTRUCT`) {\n      console.warn(`Unhandled action \"${action.name}\".`, action)\n    }\n    return newState\n  }\n}\n"],"sourceRoot":"/source/"}