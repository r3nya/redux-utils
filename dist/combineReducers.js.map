{"version":3,"sources":["combineReducers.js"],"names":[],"mappings":";;;;;;;yBACsB,WAAW;;;;+BACL,mBAAmB;;;;8BACpB,kBAAkB;;;;qBAC/B,OAAO;;;;2BACG,eAAe;;;;2BACf,eAAe;;;;AAEvC,IAAI,sBAAsB,GAAG,SAAzB,sBAAsB,CAAI,UAAU,EAAE,OAAO,EAAK;AACpD,MAAI,CAAC,uBAAU,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;AAC9C,UAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;GACzB;CACF,CAAA;;AAED,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAI,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,aAAa,EAAK;AAC7D,wBAAsB,CAAC,MAAM,EAAE,mDAAmD,CAAC,CAAA;AACnF,qBAAE,aAAa,CAAC,UAAC,KAAK,EAAE,UAAU,EAAK;AACrC,QAAI,yBAAY,KAAK,CAAC,EAAE;AACtB,UAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACtB,qBAAa,CAAC,eAAe,GAAG,IAAI,CAAA;AACpC,YAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC,CAAA;AAC/D,8BAAsB,CAAC,MAAM,+DAA6D,UAAU,kBAAa,MAAM,CAAC,IAAI,oCAA+B,OAAO,MAAM,QAAK,CAAA;AAC7K,cAAM,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAA;OACxC;KACF,MAAM,IAAI,yBAAY,KAAK,CAAC,EAAE;AAC7B,YAAM,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,uBAAU,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC,CAAA;KACnH;GACF,EAAE,WAAW,CAAC,CAAA;AACf,SAAO,MAAM,CAAA;CACd,CAAA;;qBAEc,UAAC,OAAO,EAAK;AAC1B,+BAAgB,OAAO,CAAC,CAAA;AACxB,SAAO,UAAC,KAAK,EAAE,MAAM,EAAK;AACxB,QAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC9B,YAAM,IAAI,KAAK,6CAA6C,CAAA;KAC7D;AACD,QAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,MAAM,KAAK,CAAC,EAAE;AAClD,aAAO,CAAC,IAAI,yCAAuC,MAAM,CAAC,IAAI,8BAA2B,CAAC;AAC1F,aAAO,KAAK,CAAC;KACd;AACD,gCAAe,MAAM,CAAC,CAAA;AACtB,QAAI,aAAa,GAAG;AAClB,qBAAe,EAAE,KAAK;KACvB,CAAA;AACD,QAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,CAAC,CAAA;AAC9D,QAAI,CAAC,aAAa,CAAC,eAAe,IAAI,MAAM,CAAC,IAAI,gBAAgB,EAAE;AACjE,aAAO,CAAC,IAAI,wBAAsB,MAAM,CAAC,IAAI,SAAM,MAAM,CAAC,CAAA;KAC3D;AACD,WAAO,QAAQ,CAAA;GAChB,CAAA;CACF","file":"combineReducers.js","sourcesContent":["/* @flow weak */\nimport Immutable from 'immutable'\nimport validateReducer from './validateReducer'\nimport validateAction from './validateAction'\nimport R from 'ramda'\nimport isActionMap from './isActionMap'\nimport isDomainMap from './isDomainMap'\n\nlet immutableIterableCheck = (collection, message) => {\n  if (!Immutable.Iterable.isIterable(collection)) {\n    throw new Error(message)\n  }\n}\n\nlet iterator = (domain, action, reducersObj, actionTracker) => {\n  immutableIterableCheck(domain, 'Domain must be an instance of Immutable.Iterable.')\n  R.mapObjIndexed((value, domainName) => {\n    if (isActionMap(value)) {\n      if (value[action.type]) {\n        actionTracker.isActionHandled = true\n        let result = value[action.type](domain.get(domainName), action)\n        immutableIterableCheck(result, `Reducer must return an instance of Immutable.Iterable. \"${domainName}\" domain \"${action.type}\" action handler result is \"${typeof result}\".`)\n        domain = domain.set(domainName, result)\n      }\n    } else if (isDomainMap(value)) {\n      domain = domain.set(domainName, iterator(domain.get(domainName) || Immutable.Map(), action, value, actionTracker))\n    }\n  }, reducersObj)\n  return domain\n}\n\nexport default (reducer) => {\n  validateReducer(reducer)\n  return (state, action) => {\n    if (typeof action !== 'object') {\n      throw new Error(`Action parameter value must be an object.`)\n    }\n    if (action.type && action.type.indexOf(`@@`) === 0) {\n      console.info(`Uh Oh, it looks like you are using ${action.type}, which is not supported`);\n      return state;\n    }\n    validateAction(action)\n    let actionTracker = {\n      isActionHandled: false\n    }\n    let newState = iterator(state, action, reducer, actionTracker)\n    if (!actionTracker.isActionHandled && action.type !== `CONSTRUCT`) {\n      console.warn(`Unhandled action \"${action.type}\".`, action)\n    }\n    return newState\n  }\n}\n"],"sourceRoot":"/source/"}