{"version":3,"sources":["validateAction.js"],"names":[],"mappings":";;;;;;qBACc,SAAS;;;;kCACQ,sBAAsB;;;;qBAEtC,UAAC,MAAM,EAAgE;AACpF,MAAI,CAAC,mBAAE,aAAa,CAAC,MAAM,CAAC,EAAE;AAC5B,UAAM,IAAI,SAAS,CAAC,2CAA2C,CAAC,CAAA;GACjE;AACD,MAAI,mBAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AAC9B,UAAM,IAAI,SAAS,CAAC,uDAAuD,CAAC,CAAA;GAC7E;AACD,MAAI;AACF,oCAAmB,MAAM,CAAC,IAAI,CAAC,CAAA;GAChC,CAAC,OAAO,CAAC,EAAE;AACV,WAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AACnB,UAAM,IAAI,SAAS,CAAC,6EAA6E,CAAC,CAAA;GACnG;AACD,MAAI,CAAC,mBAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAE,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;AACtE,UAAM,IAAI,SAAS,CAAC,2EAA2E,CAAC,CAAA;GACjG;AACD,MAAI,CAAC,mBAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AAChE,UAAM,IAAI,SAAS,CAAC,wEAAwE,CAAC,CAAA;GAC9F;AACD,MAAI,CAAC,mBAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AAChC,QAAI,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,KAAK,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;AAC5E,YAAM,IAAI,SAAS,CAAC,yGAAyG,CAAC,CAAA;KAC/H;GACF;AACD,MAAI,eAAoB,GAAG,mBAAE,KAAK,CAAC,mBAAE,UAAU,CAAC,mBAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAA;AAClH,MAAI,eAAe,EAAE;AACnB,UAAM,IAAI,SAAS,CAAC,gEAAgE,GAAG,eAAe,GAAG,2BAA2B,CAAC,CAAA;GACtI;CACF","file":"validateAction.js","sourcesContent":["/* @flow */\nimport _ from './utils'\nimport validateActionType from './validateActionType'\n\nexport default (action: {type: string; payload: Object; meta: Object; error: any}) => {\n  if (!_.isPlainObject(action)) {\n    throw new TypeError('Action definition must be a plain object.')\n  }\n  if (_.isUndefined(action.type)) {\n    throw new TypeError('Action definition object must define \"type\" property.')\n  }\n  try {\n    validateActionType(action.type)\n  } catch (e) {\n    console.log(action)\n    throw new TypeError('Action definition object \"type\" property value must be a valid action type.')\n  }\n  if (!_.isUndefined(action.payload) && !_.isPlainObject(action.payload)) {\n    throw new TypeError('Action definition object \"payload\" property value must be a plain object.')\n  }\n  if (!_.isUndefined(action.meta) && !_.isPlainObject(action.meta)) {\n    throw new TypeError('Action definition object \"meta\" property value must be a plain object.')\n  }\n  if (!_.isUndefined(action.error)) {\n    if (action.error !== true && action.error !== false && action.error !== null) {\n      throw new TypeError('Action definition object \"error\" property value must be true, false or null refer to FSA for more info.')\n    }\n  }\n  let unknownProperty: any = _.first(_.difference(_.keys(action), ['CALL_API', 'payload', 'type', 'meta', 'error']))\n  if (unknownProperty) {\n    throw new TypeError('Action definition object must not define unknown properties. \"' + unknownProperty + '\" is an unknown property.')\n  }\n}\n"],"sourceRoot":"/source/"}