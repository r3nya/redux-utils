{"version":3,"sources":["validateAction.js"],"names":[],"mappings":";;;;;;qBAAc,SAAS;;;;kCACQ,sBAAsB;;;;qBAEtC,UAAC,MAAM,EAAK;AACzB,MAAI,CAAC,mBAAE,aAAa,CAAC,MAAM,CAAC,EAAE;AAC5B,UAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAA;GAC7D;AACD,MAAI,mBAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AAC9B,UAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAA;GACzE;AACD,MAAI;AACF,oCAAmB,MAAM,CAAC,IAAI,CAAC,CAAA;GAChC,CAAC,OAAO,CAAC,EAAE;AACV,UAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAA;GAC/F;AACD,MAAI,CAAC,mBAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AAChE,UAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAA;GAC1F;AACD,MAAI,CAAC,mBAAE,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAE,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;AACxE,UAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAA;GAC9F;AACD,MAAI,CAAC,mBAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AAChC,QAAI,CAAC,mBAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AAC7B,YAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAA;KACtF;AACD,QAAI,CAAC,mBAAE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;AACnC,YAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAA;KAChE;AACD,QAAI,CAAC,mBAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;AACrC,YAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAA;KAC7E;GACF;AACD,MAAI,eAAe,GAAG,mBAAE,KAAK,CAAC,mBAAE,UAAU,CAAC,mBAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAA;AAClG,MAAI,eAAe,EAAE;AACnB,UAAM,IAAI,KAAK,CAAC,gEAAgE,GAAG,eAAe,GAAG,2BAA2B,CAAC,CAAA;GAClI;CACF","file":"validateAction.js","sourcesContent":["import _ from './utils'\nimport validateActionName from './validateActionName'\n\nexport default (action) => {\n  if (!_.isPlainObject(action)) {\n    throw new Error('Action definition must be a plain object.')\n  }\n  if (_.isUndefined(action.name)) {\n    throw new Error('Action definition object must define \"name\" property.')\n  }\n  try {\n    validateActionName(action.name)\n  } catch (e) {\n    throw new Error('Action definition object \"name\" property value must be a valid action name.')\n  }\n  if (!_.isUndefined(action.data) && !_.isPlainObject(action.data)) {\n    throw new Error('Action definition object \"data\" property value must be a plain object.')\n  }\n  if (!_.isUndefined(action.metadata) && !_.isPlainObject(action.metadata)) {\n    throw new Error('Action definition object \"metadata\" property value must be a plain object.')\n  }\n  if (!_.isUndefined(action.error)) {\n    if (!_.isObject(action.error)) {\n      throw new Error('Action definition object \"error\" property value must be an object.')\n    }\n    if (!_.has(action.error, 'message')) {\n      throw new Error('\"error\" object must have \"message\" property.')\n    }\n    if (!_.isString(action.error.message)) {\n      throw new Error('\"error\" object \"message\" property value must be a string.')\n    }\n  }\n  let unknownProperty = _.first(_.difference(_.keys(action), ['name', 'data', 'metadata', 'error']))\n  if (unknownProperty) {\n    throw new Error('Action definition object must not define unknown properties. \"' + unknownProperty + '\" is an unknown property.')\n  }\n}\n"],"sourceRoot":"/source/"}