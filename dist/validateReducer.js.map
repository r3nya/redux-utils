{"version":3,"sources":["validateReducer.js"],"names":[],"mappings":";;;;;;qBAAc,SAAS;;;;kCACQ,sBAAsB;;;;2BAC7B,eAAe;;;;2BACf,eAAe;;;;qBACzB,OAAO;;;;qBAEN,UAAC,OAAO,EAAK;AAC1B,MAAI,WAAW,GAAG,EAAE,CAAA;AACpB,MAAI,CAAC,yBAAY,OAAO,CAAC,IAAI,mBAAE,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AACzD,UAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAA;GAClF;AACD,MAAI,QAAQ,GAAG,SAAX,QAAQ,CAAI,MAAM,EAAK;AACzB,uBAAE,OAAO,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,UAAU,EAAK;AACvC,UAAI,yBAAY,KAAK,CAAC,EAAE;AACtB,2BAAE,OAAO,CAAC,KAAK,EAAE,UAAC,MAAM,EAAE,IAAI,EAAK;AACjC,cAAI;AACF,4CAAmB,IAAI,CAAC,CAAA;WACzB,CAAC,OAAO,CAAC,EAAE;AACV,kBAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAA;WAC9F;;AAED,cAAI,mBAAE,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;AACjC,kBAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAA;WAClF;;AAED,cAAI,IAAI,KAAK,WAAW,EAAE;AACxB,uBAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;WACvB;SACF,CAAC,CAAA;OACH,MAAM,IAAI,yBAAY,KAAK,CAAC,EAAE;AAC7B,gBAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAA;OAC7B,MAAM;AACL,cAAM,IAAI,KAAK,CAAC,qHAAqH,CAAC,CAAA;OACvI;KACF,CAAC,CAAA;GACH,CAAA;AACD,UAAQ,CAAC,OAAO,CAAC,CAAA;CAClB","file":"validateReducer.js","sourcesContent":["import _ from './utils'\nimport validateActionName from './validateActionName'\nimport isDomainMap from './isDomainMap'\nimport isActionMap from './isActionMap'\nimport R from 'ramda'\n\nexport default (reducer) => {\n  let actionNames = []\n  if (!isDomainMap(reducer) && _.values(reducer).length > 0) {\n    throw new Error('Reducer definition object must begin with a domain definition.')\n  }\n  let iterator = (branch) => {\n    _.forEach(branch, (value, domainName) => {\n      if (isActionMap(value)) {\n        _.forEach(value, (action, name) => {\n          try {\n            validateActionName(name)\n          } catch (e) {\n            throw new Error('Reducer definition object action handler names must be valid action names.')\n          }\n\n          if (R.contains(name, actionNames)) {\n            throw new Error('Reducer definition object action handler names must be unique.')\n          }\n\n          if (name !== 'CONSTRUCT') {\n            actionNames.push(name)\n          }\n        })\n      } else if (isDomainMap(value)) {\n        iterator(branch[domainName])\n      } else {\n        throw new Error('Reducer definition object value object all values must correspond to a function (action map) or an object (domain).')\n      }\n    })\n  }\n  iterator(reducer)\n}\n"],"sourceRoot":"/source/"}